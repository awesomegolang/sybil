// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sybil.proto

package sybilpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// QueryType defines the types of query that can be performed.
type QueryType int32

const (
	QueryType_QUERY_TYPE_UNKNOWN QueryType = 0
	QueryType_TABLE              QueryType = 1
	QueryType_TIME_SERIES        QueryType = 2
	QueryType_DISTRIBUTION       QueryType = 3
	QueryType_SAMPLES            QueryType = 4
)

var QueryType_name = map[int32]string{
	0: "QUERY_TYPE_UNKNOWN",
	1: "TABLE",
	2: "TIME_SERIES",
	3: "DISTRIBUTION",
	4: "SAMPLES",
}
var QueryType_value = map[string]int32{
	"QUERY_TYPE_UNKNOWN": 0,
	"TABLE":              1,
	"TIME_SERIES":        2,
	"DISTRIBUTION":       3,
	"SAMPLES":            4,
}

func (x QueryType) String() string {
	return proto.EnumName(QueryType_name, int32(x))
}
func (QueryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{0}
}

// QueryOp is the type of operation to perform in the query.
type QueryOp int32

const (
	QueryOp_QUERY_OP_UNKNOWN QueryOp = 0
	QueryOp_AVERAGE          QueryOp = 1
	QueryOp_HISTOGRAM        QueryOp = 2
)

var QueryOp_name = map[int32]string{
	0: "QUERY_OP_UNKNOWN",
	1: "AVERAGE",
	2: "HISTOGRAM",
}
var QueryOp_value = map[string]int32{
	"QUERY_OP_UNKNOWN": 0,
	"AVERAGE":          1,
	"HISTOGRAM":        2,
}

func (x QueryOp) String() string {
	return proto.EnumName(QueryOp_name, int32(x))
}
func (QueryOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{1}
}

// QueryFilterOp is the operation to apply to a column as part of a QueryFilter.
type QueryFilterOp int32

const (
	QueryFilterOp_QUERY_FILTER_OP_UNKNOWN QueryFilterOp = 0
	QueryFilterOp_RE                      QueryFilterOp = 1
	QueryFilterOp_NRE                     QueryFilterOp = 2
	QueryFilterOp_EQ                      QueryFilterOp = 3
	QueryFilterOp_NEQ                     QueryFilterOp = 4
	QueryFilterOp_GT                      QueryFilterOp = 5
	QueryFilterOp_LT                      QueryFilterOp = 6
	QueryFilterOp_IN                      QueryFilterOp = 7
	QueryFilterOp_NIN                     QueryFilterOp = 8
)

var QueryFilterOp_name = map[int32]string{
	0: "QUERY_FILTER_OP_UNKNOWN",
	1: "RE",
	2: "NRE",
	3: "EQ",
	4: "NEQ",
	5: "GT",
	6: "LT",
	7: "IN",
	8: "NIN",
}
var QueryFilterOp_value = map[string]int32{
	"QUERY_FILTER_OP_UNKNOWN": 0,
	"RE":  1,
	"NRE": 2,
	"EQ":  3,
	"NEQ": 4,
	"GT":  5,
	"LT":  6,
	"IN":  7,
	"NIN": 8,
}

func (x QueryFilterOp) String() string {
	return proto.EnumName(QueryFilterOp_name, int32(x))
}
func (QueryFilterOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{2}
}

// HistogramType describes the type of histogram.
type HistogramType int32

const (
	HistogramType_HISTOGRAM_TYPE_UNKNOWN HistogramType = 0
	HistogramType_NORMAL_HISTOGRAM       HistogramType = 1
	HistogramType_LOG_HISTOGRAM          HistogramType = 2
)

var HistogramType_name = map[int32]string{
	0: "HISTOGRAM_TYPE_UNKNOWN",
	1: "NORMAL_HISTOGRAM",
	2: "LOG_HISTOGRAM",
}
var HistogramType_value = map[string]int32{
	"HISTOGRAM_TYPE_UNKNOWN": 0,
	"NORMAL_HISTOGRAM":       1,
	"LOG_HISTOGRAM":          2,
}

func (x HistogramType) String() string {
	return proto.EnumName(HistogramType_name, int32(x))
}
func (HistogramType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{3}
}

// IngestRequest inserts records into a sybil dataset.
type IngestRequest struct {
	// Dataset is the name of the dataset.
	Dataset string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	// Records is the set of records to insert.
	Records              []*_struct.Struct `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IngestRequest) Reset()         { *m = IngestRequest{} }
func (m *IngestRequest) String() string { return proto.CompactTextString(m) }
func (*IngestRequest) ProtoMessage()    {}
func (*IngestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{0}
}
func (m *IngestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngestRequest.Unmarshal(m, b)
}
func (m *IngestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngestRequest.Marshal(b, m, deterministic)
}
func (dst *IngestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngestRequest.Merge(dst, src)
}
func (m *IngestRequest) XXX_Size() int {
	return xxx_messageInfo_IngestRequest.Size(m)
}
func (m *IngestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IngestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IngestRequest proto.InternalMessageInfo

func (m *IngestRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *IngestRequest) GetRecords() []*_struct.Struct {
	if m != nil {
		return m.Records
	}
	return nil
}

// IngestResponse reports the results of an ingestion request.
type IngestResponse struct {
	// The numer of inserted records.
	NumberInserted       int64    `protobuf:"varint,1,opt,name=number_inserted,json=numberInserted,proto3" json:"number_inserted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IngestResponse) Reset()         { *m = IngestResponse{} }
func (m *IngestResponse) String() string { return proto.CompactTextString(m) }
func (*IngestResponse) ProtoMessage()    {}
func (*IngestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{1}
}
func (m *IngestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngestResponse.Unmarshal(m, b)
}
func (m *IngestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngestResponse.Marshal(b, m, deterministic)
}
func (dst *IngestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngestResponse.Merge(dst, src)
}
func (m *IngestResponse) XXX_Size() int {
	return xxx_messageInfo_IngestResponse.Size(m)
}
func (m *IngestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IngestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IngestResponse proto.InternalMessageInfo

func (m *IngestResponse) GetNumberInserted() int64 {
	if m != nil {
		return m.NumberInserted
	}
	return 0
}

// QueryFilter is a filter on a column.
type QueryFilter struct {
	Column               string        `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Op                   QueryFilterOp `protobuf:"varint,2,opt,name=op,proto3,enum=sybilpb.QueryFilterOp" json:"op,omitempty"`
	Value                string        `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueryFilter) Reset()         { *m = QueryFilter{} }
func (m *QueryFilter) String() string { return proto.CompactTextString(m) }
func (*QueryFilter) ProtoMessage()    {}
func (*QueryFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{2}
}
func (m *QueryFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryFilter.Unmarshal(m, b)
}
func (m *QueryFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryFilter.Marshal(b, m, deterministic)
}
func (dst *QueryFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryFilter.Merge(dst, src)
}
func (m *QueryFilter) XXX_Size() int {
	return xxx_messageInfo_QueryFilter.Size(m)
}
func (m *QueryFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryFilter.DiscardUnknown(m)
}

var xxx_messageInfo_QueryFilter proto.InternalMessageInfo

func (m *QueryFilter) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

func (m *QueryFilter) GetOp() QueryFilterOp {
	if m != nil {
		return m.Op
	}
	return QueryFilterOp_QUERY_FILTER_OP_UNKNOWN
}

func (m *QueryFilter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// QueryRequest describes a query.
type QueryRequest struct {
	// Dataset is the name of the dataset.
	Dataset string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	// The type of the query.
	Type QueryType `protobuf:"varint,2,opt,name=type,proto3,enum=sybilpb.QueryType" json:"type,omitempty"`
	// Limit number of results.
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// The integer fields to aggregate.
	Ints []string `protobuf:"bytes,4,rep,name=ints,proto3" json:"ints,omitempty"`
	// The string fields to aggregate.
	Strs []string `protobuf:"bytes,5,rep,name=strs,proto3" json:"strs,omitempty"`
	// The fields to group by.
	GroupBy         []string `protobuf:"bytes,6,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	DistinctGroupBy []string `protobuf:"bytes,7,rep,name=distinct_group_by,json=distinctGroupBy,proto3" json:"distinct_group_by,omitempty"`
	// Field to sort by.
	SortBy string `protobuf:"bytes,8,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// Column to consider as the time column.
	TimeColumn string `protobuf:"bytes,9,opt,name=time_column,json=timeColumn,proto3" json:"time_column,omitempty"`
	// Time bucket size in seconds.
	TimeBucket int64 `protobuf:"varint,10,opt,name=time_bucket,json=timeBucket,proto3" json:"time_bucket,omitempty"`
	// The column to interpret as the weight.
	WeightColumn string `protobuf:"bytes,11,opt,name=weight_column,json=weightColumn,proto3" json:"weight_column,omitempty"`
	// The operation to run.
	Op QueryOp `protobuf:"varint,12,opt,name=op,proto3,enum=sybilpb.QueryOp" json:"op,omitempty"`
	// Filters on int columns.
	IntFilters []*QueryFilter `protobuf:"bytes,13,rep,name=int_filters,json=intFilters,proto3" json:"int_filters,omitempty"`
	// Filters on string columns.
	StrFilters []*QueryFilter `protobuf:"bytes,14,rep,name=str_filters,json=strFilters,proto3" json:"str_filters,omitempty"`
	// Filters on set columns.
	SetFilters []*QueryFilter `protobuf:"bytes,15,rep,name=set_filters,json=setFilters,proto3" json:"set_filters,omitempty"`
	// If type is DISTRIBUTION then this field controls hisogram options.
	HistogramOptions *HistogramOptions `protobuf:"bytes,16,opt,name=histogram_options,json=histogramOptions,proto3" json:"histogram_options,omitempty"`
	// If true, the ingestion log is also read to produce results.
	ReadIngestionLog     bool     `protobuf:"varint,17,opt,name=read_ingestion_log,json=readIngestionLog,proto3" json:"read_ingestion_log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{3}
}
func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (dst *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(dst, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *QueryRequest) GetType() QueryType {
	if m != nil {
		return m.Type
	}
	return QueryType_QUERY_TYPE_UNKNOWN
}

func (m *QueryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryRequest) GetInts() []string {
	if m != nil {
		return m.Ints
	}
	return nil
}

func (m *QueryRequest) GetStrs() []string {
	if m != nil {
		return m.Strs
	}
	return nil
}

func (m *QueryRequest) GetGroupBy() []string {
	if m != nil {
		return m.GroupBy
	}
	return nil
}

func (m *QueryRequest) GetDistinctGroupBy() []string {
	if m != nil {
		return m.DistinctGroupBy
	}
	return nil
}

func (m *QueryRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *QueryRequest) GetTimeColumn() string {
	if m != nil {
		return m.TimeColumn
	}
	return ""
}

func (m *QueryRequest) GetTimeBucket() int64 {
	if m != nil {
		return m.TimeBucket
	}
	return 0
}

func (m *QueryRequest) GetWeightColumn() string {
	if m != nil {
		return m.WeightColumn
	}
	return ""
}

func (m *QueryRequest) GetOp() QueryOp {
	if m != nil {
		return m.Op
	}
	return QueryOp_QUERY_OP_UNKNOWN
}

func (m *QueryRequest) GetIntFilters() []*QueryFilter {
	if m != nil {
		return m.IntFilters
	}
	return nil
}

func (m *QueryRequest) GetStrFilters() []*QueryFilter {
	if m != nil {
		return m.StrFilters
	}
	return nil
}

func (m *QueryRequest) GetSetFilters() []*QueryFilter {
	if m != nil {
		return m.SetFilters
	}
	return nil
}

func (m *QueryRequest) GetHistogramOptions() *HistogramOptions {
	if m != nil {
		return m.HistogramOptions
	}
	return nil
}

func (m *QueryRequest) GetReadIngestionLog() bool {
	if m != nil {
		return m.ReadIngestionLog
	}
	return false
}

// HistogramOptions
type HistogramOptions struct {
	Type                 HistogramType `protobuf:"varint,1,opt,name=type,proto3,enum=sybilpb.HistogramType" json:"type,omitempty"`
	BucketSize           int64         `protobuf:"varint,2,opt,name=bucket_size,json=bucketSize,proto3" json:"bucket_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HistogramOptions) Reset()         { *m = HistogramOptions{} }
func (m *HistogramOptions) String() string { return proto.CompactTextString(m) }
func (*HistogramOptions) ProtoMessage()    {}
func (*HistogramOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{4}
}
func (m *HistogramOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramOptions.Unmarshal(m, b)
}
func (m *HistogramOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramOptions.Marshal(b, m, deterministic)
}
func (dst *HistogramOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramOptions.Merge(dst, src)
}
func (m *HistogramOptions) XXX_Size() int {
	return xxx_messageInfo_HistogramOptions.Size(m)
}
func (m *HistogramOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramOptions proto.InternalMessageInfo

func (m *HistogramOptions) GetType() HistogramType {
	if m != nil {
		return m.Type
	}
	return HistogramType_HISTOGRAM_TYPE_UNKNOWN
}

func (m *HistogramOptions) GetBucketSize() int64 {
	if m != nil {
		return m.BucketSize
	}
	return 0
}

// Histogram describes a distribution of values.
type Histogram struct {
	Mean                 float64         `protobuf:"fixed64,1,opt,name=mean,proto3" json:"mean,omitempty"`
	Percentiles          []int64         `protobuf:"varint,5,rep,packed,name=percentiles,proto3" json:"percentiles,omitempty"`
	Buckets              map[int64]int64 `protobuf:"bytes,6,rep,name=buckets,proto3" json:"buckets,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StdDeviation         float64         `protobuf:"fixed64,9,opt,name=std_deviation,json=stdDeviation,proto3" json:"std_deviation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Histogram) Reset()         { *m = Histogram{} }
func (m *Histogram) String() string { return proto.CompactTextString(m) }
func (*Histogram) ProtoMessage()    {}
func (*Histogram) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{5}
}
func (m *Histogram) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Histogram.Unmarshal(m, b)
}
func (m *Histogram) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Histogram.Marshal(b, m, deterministic)
}
func (dst *Histogram) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Histogram.Merge(dst, src)
}
func (m *Histogram) XXX_Size() int {
	return xxx_messageInfo_Histogram.Size(m)
}
func (m *Histogram) XXX_DiscardUnknown() {
	xxx_messageInfo_Histogram.DiscardUnknown(m)
}

var xxx_messageInfo_Histogram proto.InternalMessageInfo

func (m *Histogram) GetMean() float64 {
	if m != nil {
		return m.Mean
	}
	return 0
}

func (m *Histogram) GetPercentiles() []int64 {
	if m != nil {
		return m.Percentiles
	}
	return nil
}

func (m *Histogram) GetBuckets() map[int64]int64 {
	if m != nil {
		return m.Buckets
	}
	return nil
}

func (m *Histogram) GetStdDeviation() float64 {
	if m != nil {
		return m.StdDeviation
	}
	return 0
}

// ResultMap
type ResultMap struct {
	Values               map[string]*QueryResult `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResultMap) Reset()         { *m = ResultMap{} }
func (m *ResultMap) String() string { return proto.CompactTextString(m) }
func (*ResultMap) ProtoMessage()    {}
func (*ResultMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{6}
}
func (m *ResultMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultMap.Unmarshal(m, b)
}
func (m *ResultMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultMap.Marshal(b, m, deterministic)
}
func (dst *ResultMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultMap.Merge(dst, src)
}
func (m *ResultMap) XXX_Size() int {
	return xxx_messageInfo_ResultMap.Size(m)
}
func (m *ResultMap) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultMap.DiscardUnknown(m)
}

var xxx_messageInfo_ResultMap proto.InternalMessageInfo

func (m *ResultMap) GetValues() map[string]*QueryResult {
	if m != nil {
		return m.Values
	}
	return nil
}

// SetField
type SetField struct {
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetField) Reset()         { *m = SetField{} }
func (m *SetField) String() string { return proto.CompactTextString(m) }
func (*SetField) ProtoMessage()    {}
func (*SetField) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{7}
}
func (m *SetField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetField.Unmarshal(m, b)
}
func (m *SetField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetField.Marshal(b, m, deterministic)
}
func (dst *SetField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetField.Merge(dst, src)
}
func (m *SetField) XXX_Size() int {
	return xxx_messageInfo_SetField.Size(m)
}
func (m *SetField) XXX_DiscardUnknown() {
	xxx_messageInfo_SetField.DiscardUnknown(m)
}

var xxx_messageInfo_SetField proto.InternalMessageInfo

func (m *SetField) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// FieldValue is either an average, a historgram, or a string.
type FieldValue struct {
	// Types that are valid to be assigned to Value:
	//	*FieldValue_Avg
	//	*FieldValue_Hist
	//	*FieldValue_Str
	Value                isFieldValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FieldValue) Reset()         { *m = FieldValue{} }
func (m *FieldValue) String() string { return proto.CompactTextString(m) }
func (*FieldValue) ProtoMessage()    {}
func (*FieldValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{8}
}
func (m *FieldValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldValue.Unmarshal(m, b)
}
func (m *FieldValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldValue.Marshal(b, m, deterministic)
}
func (dst *FieldValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldValue.Merge(dst, src)
}
func (m *FieldValue) XXX_Size() int {
	return xxx_messageInfo_FieldValue.Size(m)
}
func (m *FieldValue) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldValue.DiscardUnknown(m)
}

var xxx_messageInfo_FieldValue proto.InternalMessageInfo

type isFieldValue_Value interface {
	isFieldValue_Value()
}

type FieldValue_Avg struct {
	Avg float64 `protobuf:"fixed64,1,opt,name=avg,proto3,oneof"`
}
type FieldValue_Hist struct {
	Hist *Histogram `protobuf:"bytes,2,opt,name=hist,proto3,oneof"`
}
type FieldValue_Str struct {
	Str string `protobuf:"bytes,3,opt,name=str,proto3,oneof"`
}

func (*FieldValue_Avg) isFieldValue_Value()  {}
func (*FieldValue_Hist) isFieldValue_Value() {}
func (*FieldValue_Str) isFieldValue_Value()  {}

func (m *FieldValue) GetValue() isFieldValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FieldValue) GetAvg() float64 {
	if x, ok := m.GetValue().(*FieldValue_Avg); ok {
		return x.Avg
	}
	return 0
}

func (m *FieldValue) GetHist() *Histogram {
	if x, ok := m.GetValue().(*FieldValue_Hist); ok {
		return x.Hist
	}
	return nil
}

func (m *FieldValue) GetStr() string {
	if x, ok := m.GetValue().(*FieldValue_Str); ok {
		return x.Str
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FieldValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FieldValue_OneofMarshaler, _FieldValue_OneofUnmarshaler, _FieldValue_OneofSizer, []interface{}{
		(*FieldValue_Avg)(nil),
		(*FieldValue_Hist)(nil),
		(*FieldValue_Str)(nil),
	}
}

func _FieldValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FieldValue)
	// value
	switch x := m.Value.(type) {
	case *FieldValue_Avg:
		b.EncodeVarint(1<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Avg))
	case *FieldValue_Hist:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hist); err != nil {
			return err
		}
	case *FieldValue_Str:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Str)
	case nil:
	default:
		return fmt.Errorf("FieldValue.Value has unexpected type %T", x)
	}
	return nil
}

func _FieldValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FieldValue)
	switch tag {
	case 1: // value.avg
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &FieldValue_Avg{math.Float64frombits(x)}
		return true, err
	case 2: // value.hist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Histogram)
		err := b.DecodeMessage(msg)
		m.Value = &FieldValue_Hist{msg}
		return true, err
	case 3: // value.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &FieldValue_Str{x}
		return true, err
	default:
		return false, nil
	}
}

func _FieldValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FieldValue)
	// value
	switch x := m.Value.(type) {
	case *FieldValue_Avg:
		n += 1 // tag and wire
		n += 8
	case *FieldValue_Hist:
		s := proto.Size(x.Hist)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FieldValue_Str:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Str)))
		n += len(x.Str)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type QueryResult struct {
	Values               map[string]*FieldValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Count                int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Samples              int64                  `protobuf:"varint,3,opt,name=samples,proto3" json:"samples,omitempty"`
	Distinct             int64                  `protobuf:"varint,4,opt,name=distinct,proto3" json:"distinct,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *QueryResult) Reset()         { *m = QueryResult{} }
func (m *QueryResult) String() string { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()    {}
func (*QueryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{9}
}
func (m *QueryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResult.Unmarshal(m, b)
}
func (m *QueryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResult.Marshal(b, m, deterministic)
}
func (dst *QueryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResult.Merge(dst, src)
}
func (m *QueryResult) XXX_Size() int {
	return xxx_messageInfo_QueryResult.Size(m)
}
func (m *QueryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResult.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResult proto.InternalMessageInfo

func (m *QueryResult) GetValues() map[string]*FieldValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *QueryResult) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueryResult) GetSamples() int64 {
	if m != nil {
		return m.Samples
	}
	return 0
}

func (m *QueryResult) GetDistinct() int64 {
	if m != nil {
		return m.Distinct
	}
	return 0
}

type QueryResults struct {
	Results              []*QueryResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QueryResults) Reset()         { *m = QueryResults{} }
func (m *QueryResults) String() string { return proto.CompactTextString(m) }
func (*QueryResults) ProtoMessage()    {}
func (*QueryResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{10}
}
func (m *QueryResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResults.Unmarshal(m, b)
}
func (m *QueryResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResults.Marshal(b, m, deterministic)
}
func (dst *QueryResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResults.Merge(dst, src)
}
func (m *QueryResults) XXX_Size() int {
	return xxx_messageInfo_QueryResults.Size(m)
}
func (m *QueryResults) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResults.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResults proto.InternalMessageInfo

func (m *QueryResults) GetResults() []*QueryResult {
	if m != nil {
		return m.Results
	}
	return nil
}

// QueryResponse is the response type for a query.
type QueryResponse struct {
	Results              []*QueryResult          `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TimeResults          map[int64]*QueryResults `protobuf:"bytes,2,rep,name=time_results,json=timeResults,proto3" json:"time_results,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cumulative           *QueryResult            `protobuf:"bytes,3,opt,name=cumulative,proto3" json:"cumulative,omitempty"`
	Samples              []*_struct.Struct       `protobuf:"bytes,4,rep,name=samples,proto3" json:"samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{11}
}
func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (dst *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(dst, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetResults() []*QueryResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *QueryResponse) GetTimeResults() map[int64]*QueryResults {
	if m != nil {
		return m.TimeResults
	}
	return nil
}

func (m *QueryResponse) GetCumulative() *QueryResult {
	if m != nil {
		return m.Cumulative
	}
	return nil
}

func (m *QueryResponse) GetSamples() []*_struct.Struct {
	if m != nil {
		return m.Samples
	}
	return nil
}

// ListTablesRequest requests the list of tables from sybil.
type ListTablesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTablesRequest) Reset()         { *m = ListTablesRequest{} }
func (m *ListTablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListTablesRequest) ProtoMessage()    {}
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{12}
}
func (m *ListTablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTablesRequest.Unmarshal(m, b)
}
func (m *ListTablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTablesRequest.Marshal(b, m, deterministic)
}
func (dst *ListTablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTablesRequest.Merge(dst, src)
}
func (m *ListTablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListTablesRequest.Size(m)
}
func (m *ListTablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTablesRequest proto.InternalMessageInfo

// ListTablesResponse contains the list of tables in sybil.
type ListTablesResponse struct {
	Tables               []string `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTablesResponse) Reset()         { *m = ListTablesResponse{} }
func (m *ListTablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListTablesResponse) ProtoMessage()    {}
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{13}
}
func (m *ListTablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTablesResponse.Unmarshal(m, b)
}
func (m *ListTablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTablesResponse.Marshal(b, m, deterministic)
}
func (dst *ListTablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTablesResponse.Merge(dst, src)
}
func (m *ListTablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListTablesResponse.Size(m)
}
func (m *ListTablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTablesResponse proto.InternalMessageInfo

func (m *ListTablesResponse) GetTables() []string {
	if m != nil {
		return m.Tables
	}
	return nil
}

// GetTableRequest requests details about a table.
type GetTableRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTableRequest) Reset()         { *m = GetTableRequest{} }
func (m *GetTableRequest) String() string { return proto.CompactTextString(m) }
func (*GetTableRequest) ProtoMessage()    {}
func (*GetTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{14}
}
func (m *GetTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTableRequest.Unmarshal(m, b)
}
func (m *GetTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTableRequest.Marshal(b, m, deterministic)
}
func (dst *GetTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTableRequest.Merge(dst, src)
}
func (m *GetTableRequest) XXX_Size() int {
	return xxx_messageInfo_GetTableRequest.Size(m)
}
func (m *GetTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTableRequest proto.InternalMessageInfo

func (m *GetTableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Table (aka dataset) is a collection of records in a sybil database.
type Table struct {
	// the name of the dataset.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the set of string column names.
	StrColumns []string `protobuf:"bytes,2,rep,name=str_columns,json=strColumns,proto3" json:"str_columns,omitempty"`
	// the set of integer column names.
	IntColumns []string `protobuf:"bytes,3,rep,name=int_columns,json=intColumns,proto3" json:"int_columns,omitempty"`
	// the set of set column names.
	SetColumns []string `protobuf:"bytes,4,rep,name=set_columns,json=setColumns,proto3" json:"set_columns,omitempty"`
	// the approximate count of samples.
	Count int64 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	// the approximate size in terms of disk utilization.
	StorageSize int64 `protobuf:"varint,6,opt,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty"`
	// the mean sample storage size.
	AverageObjectSize    float64  `protobuf:"fixed64,7,opt,name=average_object_size,json=averageObjectSize,proto3" json:"average_object_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Table) Reset()         { *m = Table{} }
func (m *Table) String() string { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()    {}
func (*Table) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{15}
}
func (m *Table) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Table.Unmarshal(m, b)
}
func (m *Table) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Table.Marshal(b, m, deterministic)
}
func (dst *Table) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Table.Merge(dst, src)
}
func (m *Table) XXX_Size() int {
	return xxx_messageInfo_Table.Size(m)
}
func (m *Table) XXX_DiscardUnknown() {
	xxx_messageInfo_Table.DiscardUnknown(m)
}

var xxx_messageInfo_Table proto.InternalMessageInfo

func (m *Table) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Table) GetStrColumns() []string {
	if m != nil {
		return m.StrColumns
	}
	return nil
}

func (m *Table) GetIntColumns() []string {
	if m != nil {
		return m.IntColumns
	}
	return nil
}

func (m *Table) GetSetColumns() []string {
	if m != nil {
		return m.SetColumns
	}
	return nil
}

func (m *Table) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Table) GetStorageSize() int64 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *Table) GetAverageObjectSize() float64 {
	if m != nil {
		return m.AverageObjectSize
	}
	return 0
}

// TrimRequest queries and optionally removes data from a dataset.
type TrimRequest struct {
	// The name of the dataset.
	Dataset string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	// The column to interpret as the time column.
	TimeColumn string `protobuf:"bytes,2,opt,name=time_column,json=timeColumn,proto3" json:"time_column,omitempty"`
	// Limit, in megabytes, for the dataset.
	SizeLimitMb int64 `protobuf:"varint,3,opt,name=size_limit_mb,json=sizeLimitMb,proto3" json:"size_limit_mb,omitempty"`
	// Limit, in the form a timestamp for the dataset.
	TimeLimit            int64    `protobuf:"varint,4,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	Delete               bool     `protobuf:"varint,5,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrimRequest) Reset()         { *m = TrimRequest{} }
func (m *TrimRequest) String() string { return proto.CompactTextString(m) }
func (*TrimRequest) ProtoMessage()    {}
func (*TrimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{16}
}
func (m *TrimRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrimRequest.Unmarshal(m, b)
}
func (m *TrimRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrimRequest.Marshal(b, m, deterministic)
}
func (dst *TrimRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrimRequest.Merge(dst, src)
}
func (m *TrimRequest) XXX_Size() int {
	return xxx_messageInfo_TrimRequest.Size(m)
}
func (m *TrimRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrimRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrimRequest proto.InternalMessageInfo

func (m *TrimRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *TrimRequest) GetTimeColumn() string {
	if m != nil {
		return m.TimeColumn
	}
	return ""
}

func (m *TrimRequest) GetSizeLimitMb() int64 {
	if m != nil {
		return m.SizeLimitMb
	}
	return 0
}

func (m *TrimRequest) GetTimeLimit() int64 {
	if m != nil {
		return m.TimeLimit
	}
	return 0
}

func (m *TrimRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

// TrimResponse returns the number of blocks matched by the provided thresholds.
type TrimResponse struct {
	// The number of blocks that matched the trim request.
	MatchedBlocks int64 `protobuf:"varint,1,opt,name=matched_blocks,json=matchedBlocks,proto3" json:"matched_blocks,omitempty"`
	// Data older than this timestamp matched the trim request. If this doesn't match the provided 'time_limit' then the 'size_limit_mb' field threshold was lower than the 'time_limit' threshold.
	TrimmedAt            int64    `protobuf:"varint,2,opt,name=trimmed_at,json=trimmedAt,proto3" json:"trimmed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrimResponse) Reset()         { *m = TrimResponse{} }
func (m *TrimResponse) String() string { return proto.CompactTextString(m) }
func (*TrimResponse) ProtoMessage()    {}
func (*TrimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sybil_fbc1584d1510d670, []int{17}
}
func (m *TrimResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrimResponse.Unmarshal(m, b)
}
func (m *TrimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrimResponse.Marshal(b, m, deterministic)
}
func (dst *TrimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrimResponse.Merge(dst, src)
}
func (m *TrimResponse) XXX_Size() int {
	return xxx_messageInfo_TrimResponse.Size(m)
}
func (m *TrimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrimResponse proto.InternalMessageInfo

func (m *TrimResponse) GetMatchedBlocks() int64 {
	if m != nil {
		return m.MatchedBlocks
	}
	return 0
}

func (m *TrimResponse) GetTrimmedAt() int64 {
	if m != nil {
		return m.TrimmedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*IngestRequest)(nil), "sybilpb.IngestRequest")
	proto.RegisterType((*IngestResponse)(nil), "sybilpb.IngestResponse")
	proto.RegisterType((*QueryFilter)(nil), "sybilpb.QueryFilter")
	proto.RegisterType((*QueryRequest)(nil), "sybilpb.QueryRequest")
	proto.RegisterType((*HistogramOptions)(nil), "sybilpb.HistogramOptions")
	proto.RegisterType((*Histogram)(nil), "sybilpb.Histogram")
	proto.RegisterMapType((map[int64]int64)(nil), "sybilpb.Histogram.BucketsEntry")
	proto.RegisterType((*ResultMap)(nil), "sybilpb.ResultMap")
	proto.RegisterMapType((map[string]*QueryResult)(nil), "sybilpb.ResultMap.ValuesEntry")
	proto.RegisterType((*SetField)(nil), "sybilpb.SetField")
	proto.RegisterType((*FieldValue)(nil), "sybilpb.FieldValue")
	proto.RegisterType((*QueryResult)(nil), "sybilpb.QueryResult")
	proto.RegisterMapType((map[string]*FieldValue)(nil), "sybilpb.QueryResult.ValuesEntry")
	proto.RegisterType((*QueryResults)(nil), "sybilpb.QueryResults")
	proto.RegisterType((*QueryResponse)(nil), "sybilpb.QueryResponse")
	proto.RegisterMapType((map[int64]*QueryResults)(nil), "sybilpb.QueryResponse.TimeResultsEntry")
	proto.RegisterType((*ListTablesRequest)(nil), "sybilpb.ListTablesRequest")
	proto.RegisterType((*ListTablesResponse)(nil), "sybilpb.ListTablesResponse")
	proto.RegisterType((*GetTableRequest)(nil), "sybilpb.GetTableRequest")
	proto.RegisterType((*Table)(nil), "sybilpb.Table")
	proto.RegisterType((*TrimRequest)(nil), "sybilpb.TrimRequest")
	proto.RegisterType((*TrimResponse)(nil), "sybilpb.TrimResponse")
	proto.RegisterEnum("sybilpb.QueryType", QueryType_name, QueryType_value)
	proto.RegisterEnum("sybilpb.QueryOp", QueryOp_name, QueryOp_value)
	proto.RegisterEnum("sybilpb.QueryFilterOp", QueryFilterOp_name, QueryFilterOp_value)
	proto.RegisterEnum("sybilpb.HistogramType", HistogramType_name, HistogramType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SybilClient is the client API for Sybil service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SybilClient interface {
	// Ingest inserts new data into a sybil dataset.
	Ingest(ctx context.Context, in *IngestRequest, opts ...grpc.CallOption) (*IngestResponse, error)
	// Query retrieves results from sybil.
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	// ListTables lists the tables in a sybil database.
	ListTables(ctx context.Context, in *ListTablesRequest, opts ...grpc.CallOption) (*ListTablesResponse, error)
	// GetTable gets details about a particular table.
	GetTable(ctx context.Context, in *GetTableRequest, opts ...grpc.CallOption) (*Table, error)
	// Trim lists and possily removes data exceeding some thresholds.
	Trim(ctx context.Context, in *TrimRequest, opts ...grpc.CallOption) (*TrimResponse, error)
}

type sybilClient struct {
	cc *grpc.ClientConn
}

func NewSybilClient(cc *grpc.ClientConn) SybilClient {
	return &sybilClient{cc}
}

func (c *sybilClient) Ingest(ctx context.Context, in *IngestRequest, opts ...grpc.CallOption) (*IngestResponse, error) {
	out := new(IngestResponse)
	err := c.cc.Invoke(ctx, "/sybilpb.Sybil/Ingest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sybilClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/sybilpb.Sybil/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sybilClient) ListTables(ctx context.Context, in *ListTablesRequest, opts ...grpc.CallOption) (*ListTablesResponse, error) {
	out := new(ListTablesResponse)
	err := c.cc.Invoke(ctx, "/sybilpb.Sybil/ListTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sybilClient) GetTable(ctx context.Context, in *GetTableRequest, opts ...grpc.CallOption) (*Table, error) {
	out := new(Table)
	err := c.cc.Invoke(ctx, "/sybilpb.Sybil/GetTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sybilClient) Trim(ctx context.Context, in *TrimRequest, opts ...grpc.CallOption) (*TrimResponse, error) {
	out := new(TrimResponse)
	err := c.cc.Invoke(ctx, "/sybilpb.Sybil/Trim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SybilServer is the server API for Sybil service.
type SybilServer interface {
	// Ingest inserts new data into a sybil dataset.
	Ingest(context.Context, *IngestRequest) (*IngestResponse, error)
	// Query retrieves results from sybil.
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	// ListTables lists the tables in a sybil database.
	ListTables(context.Context, *ListTablesRequest) (*ListTablesResponse, error)
	// GetTable gets details about a particular table.
	GetTable(context.Context, *GetTableRequest) (*Table, error)
	// Trim lists and possily removes data exceeding some thresholds.
	Trim(context.Context, *TrimRequest) (*TrimResponse, error)
}

func RegisterSybilServer(s *grpc.Server, srv SybilServer) {
	s.RegisterService(&_Sybil_serviceDesc, srv)
}

func _Sybil_Ingest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SybilServer).Ingest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sybilpb.Sybil/Ingest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SybilServer).Ingest(ctx, req.(*IngestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sybil_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SybilServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sybilpb.Sybil/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SybilServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sybil_ListTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SybilServer).ListTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sybilpb.Sybil/ListTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SybilServer).ListTables(ctx, req.(*ListTablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sybil_GetTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SybilServer).GetTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sybilpb.Sybil/GetTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SybilServer).GetTable(ctx, req.(*GetTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sybil_Trim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrimRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SybilServer).Trim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sybilpb.Sybil/Trim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SybilServer).Trim(ctx, req.(*TrimRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sybil_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sybilpb.Sybil",
	HandlerType: (*SybilServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ingest",
			Handler:    _Sybil_Ingest_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _Sybil_Query_Handler,
		},
		{
			MethodName: "ListTables",
			Handler:    _Sybil_ListTables_Handler,
		},
		{
			MethodName: "GetTable",
			Handler:    _Sybil_GetTable_Handler,
		},
		{
			MethodName: "Trim",
			Handler:    _Sybil_Trim_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sybil.proto",
}

func init() { proto.RegisterFile("sybil.proto", fileDescriptor_sybil_fbc1584d1510d670) }

var fileDescriptor_sybil_fbc1584d1510d670 = []byte{
	// 1489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xeb, 0x6e, 0x1b, 0xc5,
	0x17, 0xcf, 0xfa, 0xee, 0xb3, 0x76, 0xb2, 0x99, 0xa6, 0xc9, 0xd6, 0xfd, 0xff, 0xa9, 0x59, 0xd4,
	0x36, 0x84, 0xca, 0x15, 0x81, 0x56, 0xbd, 0x48, 0x48, 0x09, 0x75, 0x13, 0x83, 0x63, 0x37, 0xe3,
	0x4d, 0x51, 0x25, 0xc4, 0x6a, 0x6d, 0x4f, 0x9d, 0xa5, 0x7b, 0x31, 0x3b, 0xe3, 0x20, 0xf7, 0x31,
	0x10, 0x6f, 0xc0, 0x3b, 0xf0, 0x12, 0x3c, 0x03, 0x9f, 0xf8, 0xc0, 0x6b, 0xa0, 0xb9, 0xec, 0x66,
	0x63, 0x9b, 0x46, 0x7c, 0xf2, 0xce, 0x6f, 0x7e, 0xe7, 0x32, 0xe7, 0x9c, 0x39, 0x67, 0x0c, 0x3a,
	0x9d, 0x0f, 0x3d, 0xbf, 0x35, 0x8d, 0x23, 0x16, 0xa1, 0xb2, 0x58, 0x4c, 0x87, 0x8d, 0xff, 0x4d,
	0xa2, 0x68, 0xe2, 0x93, 0x87, 0x02, 0x1e, 0xce, 0xde, 0x3e, 0xa4, 0x2c, 0x9e, 0x8d, 0x98, 0xa4,
	0x59, 0xdf, 0x43, 0xbd, 0x13, 0x4e, 0x08, 0x65, 0x98, 0xfc, 0x34, 0x23, 0x94, 0x21, 0x13, 0xca,
	0x63, 0x97, 0xb9, 0x94, 0x30, 0x53, 0x6b, 0x6a, 0xbb, 0x55, 0x9c, 0x2c, 0xd1, 0xe7, 0x50, 0x8e,
	0xc9, 0x28, 0x8a, 0xc7, 0xd4, 0xcc, 0x35, 0xf3, 0xbb, 0xfa, 0xfe, 0x4e, 0x4b, 0xaa, 0x6e, 0x25,
	0xaa, 0x5b, 0x03, 0xa1, 0x1a, 0x27, 0x3c, 0xeb, 0x29, 0xac, 0x27, 0xda, 0xe9, 0x34, 0x0a, 0x29,
	0x41, 0xf7, 0x61, 0x23, 0x9c, 0x05, 0x43, 0x12, 0x3b, 0x5e, 0x48, 0x49, 0xcc, 0xc8, 0x58, 0x98,
	0xc9, 0xe3, 0x75, 0x09, 0x77, 0x14, 0x6a, 0x8d, 0x40, 0x3f, 0x9d, 0x91, 0x78, 0xfe, 0xd2, 0xf3,
	0x19, 0x89, 0xd1, 0x36, 0x94, 0x46, 0x91, 0x3f, 0x0b, 0x42, 0xe5, 0x95, 0x5a, 0xa1, 0x7b, 0x90,
	0x8b, 0xa6, 0x66, 0xae, 0xa9, 0xed, 0xae, 0xef, 0x6f, 0xb7, 0xd4, 0x99, 0x5b, 0x19, 0xc9, 0xfe,
	0x14, 0xe7, 0xa2, 0x29, 0xda, 0x82, 0xe2, 0x85, 0xeb, 0xcf, 0x88, 0x99, 0x17, 0xe2, 0x72, 0x61,
	0xfd, 0x52, 0x84, 0x9a, 0xe0, 0x5e, 0x7f, 0xfa, 0x7b, 0x50, 0x60, 0xf3, 0x29, 0x51, 0xa6, 0xd0,
	0x55, 0x53, 0xf6, 0x7c, 0x4a, 0xb0, 0xd8, 0xe7, 0x86, 0x7c, 0x2f, 0xf0, 0x98, 0x30, 0x94, 0xc7,
	0x72, 0x81, 0x10, 0x14, 0xbc, 0x90, 0x51, 0xb3, 0xd0, 0xcc, 0xef, 0x56, 0xb1, 0xf8, 0xe6, 0x18,
	0x65, 0x31, 0x35, 0x8b, 0x12, 0xe3, 0xdf, 0xe8, 0x16, 0x54, 0x26, 0x71, 0x34, 0x9b, 0x3a, 0xc3,
	0xb9, 0x59, 0x12, 0x78, 0x59, 0xac, 0x0f, 0xe7, 0x68, 0x0f, 0x36, 0xc7, 0x1e, 0x65, 0x5e, 0x38,
	0x62, 0x4e, 0xca, 0x29, 0x0b, 0xce, 0x46, 0xb2, 0x71, 0xa4, 0xb8, 0x3b, 0x50, 0xa6, 0x51, 0xcc,
	0x38, 0xa3, 0x22, 0xc3, 0xc5, 0x97, 0x87, 0x73, 0x74, 0x07, 0x74, 0xe6, 0x05, 0xc4, 0x51, 0xb1,
	0xac, 0x8a, 0x4d, 0xe0, 0xd0, 0xd7, 0x32, 0x9e, 0x09, 0x61, 0x38, 0x1b, 0xbd, 0x23, 0xcc, 0x04,
	0x71, 0x08, 0x41, 0x38, 0x14, 0x08, 0xfa, 0x04, 0xea, 0x3f, 0x13, 0x6f, 0x72, 0xce, 0x12, 0x1d,
	0xba, 0xd0, 0x51, 0x93, 0xa0, 0xd2, 0xd2, 0x14, 0x59, 0xa9, 0x89, 0x50, 0x19, 0x57, 0x43, 0xa5,
	0xf2, 0xf1, 0x08, 0x74, 0x2f, 0x64, 0xce, 0x5b, 0x91, 0x23, 0x6a, 0xd6, 0x45, 0x41, 0x6d, 0xad,
	0x4a, 0x20, 0x06, 0x2f, 0x64, 0xf2, 0x93, 0x72, 0x31, 0xca, 0xe2, 0x54, 0x6c, 0xfd, 0x43, 0x62,
	0x94, 0xc5, 0x59, 0x31, 0x72, 0x69, 0x6d, 0xe3, 0x83, 0x62, 0x24, 0xb5, 0xf6, 0x12, 0x36, 0xcf,
	0x3d, 0xca, 0xa2, 0x49, 0xec, 0x06, 0x4e, 0x34, 0x65, 0x5e, 0x14, 0x52, 0xd3, 0x68, 0x6a, 0xbb,
	0xfa, 0xfe, 0xad, 0x54, 0xf8, 0x38, 0x61, 0xf4, 0x25, 0x01, 0x1b, 0xe7, 0x0b, 0x08, 0x7a, 0x00,
	0x28, 0x26, 0xee, 0xd8, 0xf1, 0xc4, 0x5d, 0xf0, 0xa2, 0xd0, 0xf1, 0xa3, 0x89, 0xb9, 0xd9, 0xd4,
	0x76, 0x2b, 0xd8, 0xe0, 0x3b, 0x9d, 0x64, 0xa3, 0x1b, 0x4d, 0x2c, 0x07, 0x8c, 0x45, 0x9d, 0x68,
	0x4f, 0x55, 0x9f, 0xb6, 0x50, 0xe8, 0x29, 0x31, 0x53, 0x81, 0x77, 0x40, 0x97, 0xd9, 0x73, 0xa8,
	0xf7, 0x5e, 0x16, 0x6c, 0x1e, 0x83, 0x84, 0x06, 0xde, 0x7b, 0x62, 0xfd, 0xa9, 0x41, 0x35, 0x15,
	0xe4, 0x65, 0x18, 0x10, 0x57, 0xde, 0x2b, 0x0d, 0x8b, 0x6f, 0xd4, 0x04, 0x7d, 0x4a, 0xe2, 0x11,
	0x09, 0x99, 0xe7, 0x13, 0x59, 0xa1, 0x79, 0x9c, 0x85, 0xd0, 0x53, 0x28, 0x4b, 0x8d, 0x54, 0xd4,
	0xa9, 0xbe, 0x7f, 0x67, 0xd9, 0xa7, 0x96, 0x2c, 0x19, 0xda, 0x0e, 0x59, 0x3c, 0xc7, 0x09, 0x9f,
	0x57, 0x10, 0x65, 0x63, 0x67, 0x4c, 0x2e, 0x3c, 0x97, 0x9f, 0x4e, 0x54, 0xa1, 0x86, 0x6b, 0x94,
	0x8d, 0x5f, 0x24, 0x58, 0xe3, 0x19, 0xd4, 0xb2, 0xd2, 0xc8, 0x80, 0xfc, 0x3b, 0x32, 0x57, 0xbd,
	0x82, 0x7f, 0x5e, 0xde, 0x68, 0x79, 0x40, 0xb9, 0x78, 0x96, 0x7b, 0xa2, 0x59, 0xbf, 0x6a, 0x50,
	0xc5, 0x84, 0xce, 0x7c, 0x76, 0xe2, 0x4e, 0xd1, 0x63, 0x28, 0x89, 0x2d, 0x6a, 0x6a, 0xc2, 0xd1,
	0x8f, 0x52, 0x47, 0x53, 0x4e, 0xeb, 0xb5, 0x20, 0x48, 0x3f, 0x15, 0xbb, 0xd1, 0x07, 0x3d, 0x03,
	0x67, 0x1d, 0xa8, 0x4a, 0x07, 0xf6, 0xb2, 0x0e, 0x2c, 0x95, 0x93, 0x54, 0x9e, 0x75, 0xcb, 0x82,
	0xca, 0x80, 0xd7, 0x16, 0xf1, 0xc7, 0xbc, 0x9d, 0x65, 0x9c, 0xaa, 0x26, 0x46, 0xad, 0x09, 0x80,
	0x20, 0x08, 0xcb, 0x08, 0x41, 0xde, 0xbd, 0x98, 0xc8, 0xcc, 0x1c, 0xaf, 0x61, 0xbe, 0x40, 0xbb,
	0x50, 0xe0, 0xf5, 0xa5, 0x8c, 0xa2, 0xe5, 0xa8, 0x1f, 0xaf, 0x61, 0xc1, 0xe0, 0xd2, 0x94, 0xc5,
	0xb2, 0xe1, 0x71, 0x69, 0xca, 0xe2, 0xc3, 0xb2, 0xf2, 0xd9, 0xfa, 0x4b, 0x53, 0xfd, 0x55, 0xfa,
	0x89, 0x9e, 0x2c, 0x44, 0xa9, 0xb9, 0xea, 0x34, 0xab, 0xe2, 0xc4, 0xf3, 0x30, 0x8a, 0x66, 0x21,
	0x4b, 0xf2, 0x20, 0x16, 0xbc, 0x91, 0x52, 0x37, 0x98, 0xf2, 0xea, 0x91, 0x8d, 0x30, 0x59, 0xa2,
	0x06, 0x54, 0x92, 0x76, 0x65, 0x16, 0xc4, 0x56, 0xba, 0x6e, 0xf4, 0xae, 0x8b, 0xf9, 0xa7, 0x57,
	0x63, 0x7e, 0x23, 0xf5, 0xf2, 0x32, 0x6a, 0xd9, 0x90, 0x7f, 0x95, 0xb6, 0x77, 0xee, 0x3e, 0x45,
	0x2d, 0x3e, 0xc2, 0xc4, 0xa7, 0x3a, 0xe6, 0xea, 0xa4, 0x25, 0x24, 0xeb, 0x8f, 0x1c, 0xd4, 0x93,
	0x0d, 0x39, 0xbf, 0xfe, 0xa3, 0x06, 0xf4, 0x0d, 0xd4, 0x44, 0x3f, 0x4d, 0x84, 0xe4, 0xe4, 0xbc,
	0xbf, 0x24, 0x24, 0xb4, 0xb7, 0x6c, 0x2f, 0x20, 0xca, 0x57, 0x19, 0x64, 0xd1, 0x8c, 0x13, 0xef,
	0xbf, 0x04, 0x18, 0xcd, 0x82, 0x99, 0xef, 0x32, 0xef, 0x42, 0x0e, 0xb2, 0x7f, 0x33, 0x9f, 0xe1,
	0xf1, 0xb1, 0x9d, 0x64, 0xa2, 0x70, 0xcd, 0xd8, 0x56, 0xbc, 0xc6, 0x19, 0x18, 0x8b, 0x9e, 0xac,
	0xb8, 0x80, 0x9f, 0x5d, 0xcd, 0xc5, 0xcd, 0x55, 0x9e, 0xd0, 0x6c, 0x36, 0x6e, 0xc0, 0x66, 0xd7,
	0xa3, 0xcc, 0x76, 0x87, 0x3e, 0xa1, 0x6a, 0xe2, 0x5a, 0x0f, 0x00, 0x65, 0x41, 0x15, 0xe6, 0x6d,
	0x28, 0x31, 0x81, 0x24, 0xf7, 0x43, 0xae, 0xac, 0xbb, 0xb0, 0x71, 0x44, 0x24, 0x39, 0x19, 0xd9,
	0x08, 0x0a, 0xa1, 0x1b, 0x10, 0x55, 0x25, 0xe2, 0xdb, 0xfa, 0x5b, 0x83, 0xa2, 0x20, 0xad, 0xda,
	0xe5, 0x0d, 0x92, 0x0f, 0x11, 0x39, 0xbf, 0x64, 0x4a, 0xaa, 0x62, 0x5c, 0xc8, 0xe9, 0x45, 0x39,
	0x81, 0x0f, 0xa7, 0x84, 0x90, 0x97, 0x04, 0x2f, 0x64, 0x19, 0x02, 0x9f, 0x27, 0x09, 0xa1, 0xa0,
	0x34, 0x90, 0x94, 0x90, 0x5e, 0x8a, 0x62, 0xf6, 0x52, 0x7c, 0x0c, 0x35, 0xca, 0xa2, 0xd8, 0x9d,
	0x10, 0xd9, 0x9a, 0x4b, 0x62, 0x53, 0x57, 0x18, 0xef, 0xcd, 0xa8, 0x05, 0x37, 0xdc, 0x0b, 0x22,
	0x28, 0xd1, 0xf0, 0x47, 0x32, 0x52, 0x4d, 0xbc, 0x2c, 0x5a, 0xe4, 0xa6, 0xda, 0xea, 0x8b, 0x1d,
	0xd1, 0xcb, 0x7f, 0xd3, 0x40, 0xb7, 0x63, 0x2f, 0xb8, 0xfe, 0x01, 0xb3, 0x30, 0xfa, 0x73, 0x4b,
	0xa3, 0xdf, 0x82, 0x3a, 0xb7, 0xe5, 0x88, 0x17, 0x8b, 0x13, 0x0c, 0xd5, 0xc5, 0xd5, 0x39, 0xd8,
	0xe5, 0xd8, 0xc9, 0x10, 0xfd, 0x1f, 0x84, 0x84, 0xe4, 0xa8, 0xeb, 0x5b, 0xe5, 0x88, 0x20, 0xf0,
	0xb4, 0x8d, 0x89, 0x4f, 0x18, 0x11, 0xe7, 0xae, 0x60, 0xb5, 0xb2, 0x6c, 0xa8, 0x49, 0x27, 0x55,
	0x7a, 0xef, 0xc2, 0x7a, 0xe0, 0xb2, 0xd1, 0x39, 0x19, 0x3b, 0x43, 0x3f, 0x1a, 0xbd, 0xa3, 0xaa,
	0xae, 0xea, 0x0a, 0x3d, 0x14, 0xa0, 0xb0, 0x16, 0x7b, 0x41, 0x40, 0xc6, 0x8e, 0x9b, 0xf4, 0x97,
	0xaa, 0x42, 0x0e, 0xd8, 0xde, 0x0f, 0x50, 0x4d, 0x5f, 0x5f, 0x68, 0x1b, 0xd0, 0xe9, 0x59, 0x1b,
	0xbf, 0x71, 0xec, 0x37, 0xaf, 0xda, 0xce, 0x59, 0xef, 0xdb, 0x5e, 0xff, 0xbb, 0x9e, 0xb1, 0x86,
	0xaa, 0x50, 0xb4, 0x0f, 0x0e, 0xbb, 0x6d, 0x43, 0x43, 0x1b, 0xa0, 0xdb, 0x9d, 0x93, 0xb6, 0x33,
	0x68, 0xe3, 0x4e, 0x7b, 0x60, 0xe4, 0x90, 0x01, 0xb5, 0x17, 0x9d, 0x81, 0x8d, 0x3b, 0x87, 0x67,
	0x76, 0xa7, 0xdf, 0x33, 0xf2, 0x48, 0x87, 0xf2, 0xe0, 0xe0, 0xe4, 0x55, 0xb7, 0x3d, 0x30, 0x0a,
	0x7b, 0xcf, 0xa1, 0xac, 0x9e, 0x2c, 0x68, 0x0b, 0x0c, 0xa9, 0xbd, 0xff, 0x2a, 0xa3, 0x5b, 0x87,
	0xf2, 0xc1, 0xeb, 0x36, 0x3e, 0x38, 0xe2, 0xda, 0xeb, 0x50, 0x3d, 0xee, 0x0c, 0xec, 0xfe, 0x11,
	0x3e, 0x38, 0x31, 0x72, 0x7b, 0x91, 0xea, 0x1c, 0xc9, 0x2b, 0x14, 0xdd, 0x86, 0x1d, 0xa9, 0xe2,
	0x65, 0xa7, 0x6b, 0xb7, 0xf1, 0x55, 0x4d, 0x25, 0xc8, 0x61, 0xae, 0xa4, 0x0c, 0xf9, 0x1e, 0x6e,
	0x1b, 0x39, 0x0e, 0xb4, 0x4f, 0x8d, 0xbc, 0x00, 0xda, 0xa7, 0x46, 0x81, 0x03, 0x47, 0xb6, 0x51,
	0xe4, 0xbf, 0x5d, 0xdb, 0x28, 0xf1, 0xdf, 0x4e, 0xcf, 0x28, 0x0b, 0x42, 0xa7, 0x67, 0x54, 0xf6,
	0x6c, 0xa8, 0x5f, 0x79, 0x0d, 0xa0, 0x06, 0x6c, 0xa7, 0x0e, 0x2d, 0x46, 0x65, 0x0b, 0x8c, 0x5e,
	0x1f, 0x9f, 0x1c, 0x74, 0x9d, 0x4b, 0x9f, 0x35, 0xb4, 0x09, 0xf5, 0x6e, 0xff, 0x28, 0x03, 0xe5,
	0xf6, 0x7f, 0xcf, 0x41, 0x71, 0xc0, 0xef, 0x35, 0x7a, 0x0e, 0x25, 0xf9, 0x4c, 0x41, 0x97, 0xcf,
	0x8f, 0x2b, 0x7f, 0x1d, 0x1a, 0x3b, 0x4b, 0xb8, 0x4c, 0xb7, 0xb5, 0x86, 0x9e, 0x40, 0x51, 0x44,
	0x03, 0x2d, 0x75, 0x09, 0x29, 0xba, 0xbd, 0xba, 0x21, 0x5a, 0x6b, 0xe8, 0x08, 0xe0, 0xb2, 0x3f,
	0xa0, 0x46, 0xca, 0x5b, 0xea, 0x24, 0x8d, 0xdb, 0x2b, 0xf7, 0x52, 0x45, 0x8f, 0xa1, 0x92, 0xb4,
	0x0e, 0x64, 0xa6, 0xd4, 0x85, 0x6e, 0xd2, 0x58, 0x4f, 0x77, 0x04, 0x6c, 0xad, 0xa1, 0x47, 0x50,
	0xe0, 0xb5, 0x8b, 0x2e, 0x3b, 0x6d, 0xe6, 0xbe, 0x35, 0x6e, 0x2e, 0xa0, 0x89, 0xb9, 0x61, 0x49,
	0x74, 0xd7, 0x2f, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x4d, 0x90, 0x75, 0x95, 0x0d, 0x00,
	0x00,
}
